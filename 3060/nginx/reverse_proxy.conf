server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;
  server_name immich.aquino.network;

  # allow large file uploads
  client_max_body_size 50000M;

  # Set headers
  proxy_set_header Host              $http_host;
  proxy_set_header X-Real-IP         $remote_addr;
  proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;

  # enable websockets: http://nginx.org/en/docs/http/websocket.html
  proxy_http_version 1.1;
  proxy_set_header   Upgrade    $http_upgrade;
  proxy_set_header   Connection "upgrade";
  proxy_redirect     off;

  ssl_certificate      /etc/nginx/cert/_.aquino.network.crt;
  ssl_certificate_key  /etc/nginx/cert/_.aquino.network.key;

  location / {
    proxy_pass          http://127.0.0.1:2283/;
  }
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;
  server_name keep.aquino.network;

  # Set headers
  proxy_set_header Host              $http_host;
  proxy_set_header X-Real-IP         $remote_addr;
  proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;

  # enable websockets: http://nginx.org/en/docs/http/websocket.html
  proxy_http_version 1.1;
  proxy_set_header   Upgrade    $http_upgrade;
  proxy_set_header   Connection "upgrade";
  proxy_redirect     off;

  ssl_certificate      /etc/nginx/cert/_.aquino.network.crt;
  ssl_certificate_key  /etc/nginx/cert/_.aquino.network.key;

  location / {
    proxy_pass          http://127.0.0.1:3001/;
  }
}